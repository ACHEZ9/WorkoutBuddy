{
  "name": "Off The Bench",
  "tagline": "Project for COSI166b Brandeis",
  "body": "# Off The Bench\r\n## What is it?\r\nHave you ever wanted to get out and be active, play a game of basketball or tennis, go rock climbing, or take a hike, but haven’t been able to find anyone to go with? Many activities require, if not are much more enjoyable with one, two, or a group of other people. Friends can be busy, uninterested, and tough to coordinate.\r\n\r\nOur application will make it easy to find other people to play sports and do physical activities, plan games and group events, and make it so there is always someone that wants to get out and be active like you.\r\n\r\n##How it works\r\nSign in to the application, and search for events that people are planning on doing based on the type of activity, location, time, or skill level. Want to play a game of pickup basketball this Saturday afternoon? Go on and search with the tag basketball, set the time for Saturday between 11am - 2pm, and within 5 miles of your location. Results will show any events matching that query, and if there isn’t anything that fits what you are looking for, you can create their own activity, and others will be able to join in.\r\n\r\nUsers will create profiles where they can set what activities they are interested in and times they are free, and will be notified if activities are created that match their preferences.\r\n\r\n##Technologies Used\r\nOff The Bench is built using Ruby on Rails, version 4.2.5. SQLite3 is used as the database in development and testing environments, while in production PostgreSQL is used. Off The Bench is hosted on Heroku, running a standard WEBrick server. \r\n\r\nIn addition to the standard Rails stack, there are several additional technologies the project uses in order to increase and provide additional functionality to the product. These include a geocoding/geolocation API through the [geocoder](https://github.com/alexreisner/geocoder) gem, location data from the browser user HTML5 geolocation, background processing using [Sidekiq](https://github.com/mperham/sidekiq), a push service through [Pusher.com](https://pusher.com/), and an in-memory cache service using Redis, with the client library [redis-rb](https://github.com/redis/redis-rb).\r\n\r\n##Architecture\r\nOff The Bench is a database backed web application, integrating several additional services and processes into the overall system architecture. The Rails server runs a single background process to handle asynchronous jobs. This background process is what communicates with the Pusher service to notify clients of specific server events. During execution the background process also sends information to the Redis service to be cached, which is then retrieved by the application server while serving responses to clients. The application server can also insert and delete single values in the corresponding redis cache. This high level architecture is shown in the diagram below.\r\n\r\n\r\n\r\n### Authors and Contributors\r\nAllan Chesarone(@ACHEZ9), ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}